import * as React from "react";

export default function ArchonHiFiMockups(){

  // Theme + density + screen state
  const [theme, setTheme] = React.useState("light");
  const [density, setDensity] = React.useState("compact");
  const [screen, setScreen] = React.useState("workbench"); // workbench | diff | merge

  React.useEffect(()=>{
    // noop – kept for future: persist to localStorage if you like
  },[theme,density,screen]);

  return (
    <div data-theme={theme} data-density={density === "cozy" ? "cozy" : ""} className="min-h-screen text-[rgb(var(--fg))] bg-[rgb(var(--bg))]">
      <ThemeStyles/>
      <Header theme={theme} setTheme={setTheme} density={density} setDensity={setDensity} screen={screen} setScreen={setScreen}/>
      <main className="max-w-[1400px] mx-auto p-3 sm:p-4">
        {screen === "workbench" && <Workbench/>}
        {screen === "diff" && <DiffViewer/>}
        {screen === "merge" && <MergeResolver/>}
      </main>
      <Footer/>
    </div>
  );
}

function Header({theme,setTheme,density,setDensity,screen,setScreen}){
  return (
    <header className="sticky top-0 z-40 border-b border-[rgb(var(--border))] bg-[rgb(var(--bg))]/95 backdrop-blur supports-[backdrop-filter]:bg-[rgb(var(--bg))]/80">
      <div className="max-w-[1400px] mx-auto h-12 flex items-center gap-2 px-3 sm:px-4">
        <div className="flex items-center gap-2 select-none">
          <div className="w-6 h-6 rounded-md bg-[rgb(var(--accent))] shadow-sm"></div>
          <div className="font-semibold tracking-wide">Archon</div>
        </div>
        <nav className="ml-6 hidden sm:flex items-center text-sm">
          <Segmented value={screen} onChange={setScreen} options={[{id:"workbench",label:"Workbench"},{id:"diff",label:"Diff"},{id:"merge",label:"Merge"}]}/>
        </nav>
        <div className="ml-auto flex items-center gap-2">
          <kbd className="hidden sm:inline-flex items-center gap-1 text-xs px-2 py-1 rounded bg-[rgb(var(--surface))] border border-[rgb(var(--border))]">⌘K</kbd>
          <button onClick={()=>setTheme(theme==="light"?"dark":"light")} className="px-2 py-1 rounded-md border border-[rgb(var(--border))] hover:bg-black/5 dark:hover:bg-white/5">{theme==="light"?"Dark":"Light"} mode</button>
          <button onClick={()=>setDensity(density==="compact"?"cozy":"compact")} className="px-2 py-1 rounded-md border border-[rgb(var(--border))] hover:bg-black/5 dark:hover:bg-white/5">{density==="compact"?"Cozy":"Compact"}</button>
          <button className="px-2 py-1 rounded-md bg-[rgb(var(--accent))] text-[rgb(var(--accent-foreground))] shadow-sm">Snapshot</button>
        </div>
      </div>
    </header>
  );
}

function Footer(){
  return (
    <footer className="h-9 border-t border-[rgb(var(--border))] mt-4 flex items-center justify-between px-3 sm:px-4 text-xs text-[rgb(var(--muted-fg))]">
      <div>Status: Ready • Index healthy</div>
      <div>Remote: origin/main • Ahead 0 • Behind 0</div>
    </footer>
  );
}

function Segmented({value,onChange,options}){
  return (
    <div className="inline-flex rounded-xl p-1 bg-[rgb(var(--surface))] border border-[rgb(var(--border))] shadow-sm">
      {options.map(opt=>{
        const active = value===opt.id;
        return (
          <button key={opt.id} onClick={()=>onChange(opt.id)}
            className={"px-3 py-1.5 text-sm rounded-lg transition " + (active?"bg-[rgb(var(--accent))] text-[rgb(var(--accent-foreground))] shadow":"hover:bg-black/5 dark:hover:bg-white/5")}>{opt.label}</button>
        );
      })}
    </div>
  );
}

/***************************** WORKBENCH *****************************/
function Workbench(){
  const cols = [
    {title:"Sites", items:["Lab A","Lab B","Storage","Calibration" ]},
    {title:"Lab A", items:["Rooms","Benches","Storage" ]},
    {title:"Benches", items:["Bench 1","Bench 2","Bench 3","Bench 4","Bench 5"]},
  ];
  return (
    <div className="space-y-3">
      <CommandBar breadcrumbs={["Sites","Lab A","Benches","Bench 3"]}/>
      <div className="grid grid-cols-1 lg:grid-cols-[1fr_1fr_1fr_360px] gap-3">
        {/* Miller Columns */}
        <div className="lg:col-span-3 grid grid-cols-1 sm:grid-cols-3 gap-3">
          {cols.map((c,i)=> (
            <Column key={i} title={c.title} items={c.items}/>
          ))}
        </div>
        {/* Inspector */}
        <InspectorPanel/>
      </div>
    </div>
  );
}

function CommandBar({breadcrumbs}){
  return (
    <div className="h-12 rounded-2xl panel flex items-center gap-3 px-3 border shadow-sm">
      <Breadcrumbs items={breadcrumbs}/>
      <div className="flex-1"></div>
      <div className="hidden md:flex items-center gap-2">
        <div className="relative">
          <input placeholder="Search… (/ to focus)" className="w-72 h-8 pl-8 pr-2 rounded-lg border border-[rgb(var(--border))] bg-[rgb(var(--bg))]"/>
          <SearchIcon/>
        </div>
        <button className="px-3 h-8 rounded-lg border border-[rgb(var(--border))] hover:bg-black/5 dark:hover:bg-white/5">Filters</button>
        <button className="px-3 h-8 rounded-lg bg-[rgb(var(--accent))] text-[rgb(var(--accent-foreground))]">Sync</button>
      </div>
    </div>
  );
}

function Breadcrumbs({items}){
  return (
    <div className="flex items-center gap-1 text-sm">
      {items.map((x,i)=> (
        <div key={i} className="flex items-center gap-1">
          <span className={"px-2 py-1 rounded-md " + (i===items.length-1?"bg-[rgb(var(--accent))] text-[rgb(var(--accent-foreground))]":"bg-[rgb(var(--surface))]")}>{x}</span>
          {i<items.length-1 && <span className="text-[rgb(var(--muted-fg))]">/</span>}
        </div>
      ))}
    </div>
  );
}

function Column({title,items}){
  return (
    <div className="panel rounded-2xl border shadow-sm overflow-hidden">
      <div className="h-10 px-3 flex items-center justify-between bg-[rgb(var(--surface))] border-b border-[rgb(var(--border))]">
        <div className="font-medium text-sm">{title}</div>
        <button className="text-xs px-2 py-1 rounded-md hover:bg-black/5 dark:hover:bg-white/5">New</button>
      </div>
      <ul className="max-h-[520px] overflow-auto divide-y divide-[rgb(var(--border))]">
        {Array.from({length: 8}).map((_,i)=> (
          <li key={i} className="px-3 py-2 hover:bg-black/5 dark:hover:bg-white/5 cursor-default flex items-center gap-2">
            <span className="w-1.5 h-1.5 rounded-full bg-[rgb(var(--accent))]"></span>
            <span>{items[i % items.length]} {i+1}</span>
          </li>
        ))}
      </ul>
    </div>
  );
}

function InspectorPanel(){
  return (
    <aside className="panel rounded-2xl border shadow-sm p-3 space-y-3">
      <div className="flex items-center justify-between">
        <h3 className="text-sm font-semibold">Inspector</h3>
        <button className="px-2 py-1 text-xs rounded-md border border-[rgb(var(--border))]">History</button>
      </div>
      <Field label="Name"><input className="w-full input" defaultValue="Oscilloscope 1"/></Field>
      <Field label="Description"><textarea className="w-full input min-h-[60px]" defaultValue="Keysight DSOX2004A lab oscilloscope"/></Field>
      <h4 className="text-xs font-semibold opacity-80">Properties</h4>
      <PropRow k="max_voltage" v="60"/>
      <PropRow k="serial" v="ABC123"/>
      <PropRow k="last_calibration" v="2025-06-03"/>
      <div className="flex gap-2 pt-1">
        <button className="px-3 py-1.5 rounded-lg bg-[rgb(var(--accent))] text-[rgb(var(--accent-foreground))]">Save</button>
        <button className="px-3 py-1.5 rounded-lg border border-[rgb(var(--border))]">Undo</button>
      </div>
      <h4 className="text-xs font-semibold opacity-80 pt-2">Attachments</h4>
      <div className="rounded-xl border border-[rgb(var(--border))] p-2 grid grid-cols-[24px_1fr_auto] gap-2 items-center">
        <div className="w-5 h-5 rounded bg-black/5 dark:bg-white/5"/>
        <div>
          <div className="text-sm">datasheet.pdf</div>
          <div className="text-xs text-[rgb(var(--muted-fg))]">512 KB • LFS tracked</div>
        </div>
        <button className="text-xs px-2 py-1 rounded-md border">Open</button>
      </div>
    </aside>
  );
}

function Field({label,children}){
  return (
    <label className="block text-xs">
      <span className="block text-[rgb(var(--muted-fg))] mb-1">{label}</span>
      {children}
    </label>
  );
}

function PropRow({k,v}){
  return (
    <div className="grid grid-cols-[160px_1fr_auto] gap-2 items-center text-sm">
      <div className="text-[rgb(var(--muted-fg))]">{k}</div>
      <input className="input" defaultValue={v}/>
      <button className="px-2 py-1 text-xs rounded-md border border-[rgb(var(--border))]">Delete</button>
    </div>
  );
}

/***************************** DIFF VIEWER *****************************/
function DiffViewer(){
  const changes = [
    {type:"Rename", label:"Bench 2 → Bench B"},
    {type:"Move", label:"Oscilloscope 1 /Bench 3 → /Bench 4"},
    {type:"Property", label:"Power Supply.max_voltage: 30 → 60"},
    {type:"Add", label:"DUT 4 added"},
    {type:"Delete", label:"Old Probe removed"},
  ];
  return (
    <div className="space-y-3">
      <div className="h-12 rounded-2xl panel flex items-center gap-3 px-3 border shadow-sm">
        <div className="text-sm">Compare</div>
        <Select value="Snapshot v1.2"/>
        <div className="text-[rgb(var(--muted-fg))]">vs</div>
        <Select value="Working"/>
        <div className="flex-1"/>
        <button className="px-3 h-8 rounded-lg border border-[rgb(var(--border))]">Filters</button>
        <button className="px-3 h-8 rounded-lg bg-[rgb(var(--accent))] text-[rgb(var(--accent-foreground))]">Create Snapshot</button>
      </div>
      <div className="grid grid-cols-1 lg:grid-cols-[360px_1fr] gap-3">
        <aside className="panel rounded-2xl border shadow-sm overflow-hidden">
          <div className="h-10 px-3 flex items-center justify-between bg-[rgb(var(--surface))] border-b border-[rgb(var(--border))]">
            <div className="font-medium text-sm">Changes</div>
            <span className="text-xs text-[rgb(var(--muted-fg))]">{changes.length}</span>
          </div>
          <ul className="max-h-[540px] overflow-auto divide-y divide-[rgb(var(--border))]">
            {changes.map((c,i)=> (
              <li key={i} className="px-3 py-2 hover:bg-black/5 dark:hover:bg-white/5">
                <span className="text-xs mr-2 px-2 py-0.5 rounded-full bg-[rgb(var(--accent))]/15 text-[rgb(var(--accent))]">{c.type}</span>
                <span className="text-sm">{c.label}</span>
              </li>
            ))}
          </ul>
        </aside>
        <section className="panel rounded-2xl border shadow-sm p-3 space-y-3">
          <h3 className="text-sm font-semibold">Details</h3>
          <div className="rounded-xl border border-[rgb(var(--border))] p-3">
            <div className="text-xs text-[rgb(var(--muted-fg))] mb-1">Property Change</div>
            <div className="text-sm font-medium">Power Supply • <span className="text-[rgb(var(--muted-fg))]">max_voltage</span></div>
            <div className="grid grid-cols-2 gap-3 mt-2">
              <KV label="Before"><code>30</code></KV>
              <KV label="After"><code>60</code></KV>
            </div>
            <div className="flex gap-2 mt-3">
              <button className="px-3 py-1.5 rounded-lg border border-[rgb(var(--border))]">Open in Workbench</button>
              <button className="px-3 py-1.5 rounded-lg">Text Diff</button>
            </div>
          </div>
        </section>
      </div>
    </div>
  );
}

function Select({value}){
  return (
    <div className="inline-flex items-center gap-2 px-3 h-8 rounded-lg border border-[rgb(var(--border))] bg-[rgb(var(--bg))] text-sm">
      <span>{value}</span>
      <svg width="14" height="14" viewBox="0 0 24 24" className="opacity-70"><path fill="currentColor" d="M7 10l5 5l5-5z"/></svg>
    </div>
  );
}

function KV({label,children}){
  return (
    <div className="p-2 rounded-lg bg-black/5 dark:bg-white/5 text-sm">
      <div className="text-xs text-[rgb(var(--muted-fg))] mb-1">{label}</div>
      <div>{children}</div>
    </div>
  );
}

/***************************** MERGE RESOLVER *****************************/
function MergeResolver(){
  const conflicts = [
    {k:"max_voltage", ours:"60", theirs:"48"},
    {k:"probe_type", ours:"x10", theirs:"x1"},
  ];
  return (
    <div className="space-y-3">
      <div className="h-12 rounded-2xl panel flex items-center gap-3 px-3 border shadow-sm">
        <div className="text-sm font-semibold">Merge: conflicts detected</div>
        <span className="text-xs text-[rgb(var(--muted-fg))]">Strategy</span>
        <Select value="Prefer Ours"/>
        <div className="ml-auto flex items-center gap-2">
          <label className="text-xs flex items-center gap-2"><input type="checkbox" defaultChecked className="accent-[rgb(var(--accent))]"/> Dry‑run</label>
          <button className="px-3 h-8 rounded-lg bg-[rgb(var(--accent))] text-[rgb(var(--accent-foreground))]">Commit</button>
        </div>
      </div>

      <div className="grid grid-cols-1 xl:grid-cols-[1fr_1fr] gap-3">
        <section className="panel rounded-2xl border shadow-sm p-3 space-y-3">
          <h3 className="text-sm font-semibold">Property Conflicts</h3>
          {conflicts.map((c,i)=> (
            <div key={i} className="rounded-xl border border-[rgb(var(--border))] p-3">
              <div className="text-xs text-[rgb(var(--muted-fg))]">{c.k}</div>
              <div className="flex flex-col sm:flex-row items-stretch sm:items-center gap-2 mt-2">
                <button className="flex-1 px-3 py-2 rounded-lg border border-[rgb(var(--border))]">Accept Theirs ({c.theirs})</button>
                <button className="flex-1 px-3 py-2 rounded-lg border border-[rgb(var(--border))] bg-[rgb(var(--surface))]">Accept Ours ({c.ours})</button>
              </div>
            </div>
          ))}
        </section>
        <section className="panel rounded-2xl border shadow-sm p-3 space-y-3">
          <h3 className="text-sm font-semibold">Sibling Order Conflict</h3>
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
            <OrderCard title="Theirs" items={["PSU","Osc1","DUT1"]}/>
            <OrderCard title="Ours" items={["Osc1","PSU","DUT1"]}/>
          </div>
          <div className="flex gap-2 mt-2">
            <button className="px-3 py-1.5 rounded-lg border border-[rgb(var(--border))]">Accept Theirs</button>
            <button className="px-3 py-1.5 rounded-lg border border-[rgb(var(--border))]">Accept Ours</button>
          </div>
        </section>
      </div>

      <div className="rounded-2xl panel border shadow-sm p-3 text-sm text-[rgb(var(--muted-fg))]">
        Summary: 3 properties resolved • 1 unresolved • Sibling order chosen: Ours
      </div>
    </div>
  );
}

function OrderCard({title,items}){
  return (
    <div className="rounded-xl border border-[rgb(var(--border))] p-3">
      <div className="text-xs text-[rgb(var(--muted-fg))] mb-2">{title}</div>
      <ul className="space-y-1">
        {items.map((x,i)=> (
          <li key={i} className="px-2 py-1 rounded-md bg-black/5 dark:bg-white/5 flex items-center gap-2">
            <span className="w-5 h-5 inline-flex items-center justify-center rounded-md bg-[rgb(var(--accent))]/15 text-[rgb(var(--accent))] text-xs">{i+1}</span>
            <span>{x}</span>
          </li>
        ))}
      </ul>
    </div>
  );
}

/***************************** ICONS + INPUT BASE *****************************/
function SearchIcon(){
  return (
    <svg className="absolute left-2 top-1/2 -translate-y-1/2 w-4 h-4 opacity-60" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2"><circle cx="11" cy="11" r="7"/><line x1="21" y1="21" x2="16.65" y2="16.65"/></svg>
  );
}

/***************************** THEME STYLES *****************************/
function ThemeStyles(){
  return (
    <style>{`
/* Tailwind is available; we expose tokens for arbitrary color utilities */
:root {
  --bg:            255 255 255;     /* light bg #FFFFFF */
  --surface:       246 248 250;     /* soft panel #F6F8FA */
  --fg:            15 18 20;        /* body text #0F1214 */
  --muted-fg:      102 112 133;     /* subtle text #667085 */
  --border:        229 231 235;     /* lines #E5E7EB */
  --accent:        42 90 218;       /* cobalt #2A5ADA */
  --accent-foreground: 255 255 255; /* white */
}
:root[data-theme="dark"] {
  --bg:            18 20 23;        /* charcoal #121417 */
  --surface:       27 31 36;        /* near-black panel #1B1F24 */
  --fg:            225 229 234;     /* subtle light gray #E1E5EA */
  --muted-fg:      160 165 170;     /* #A0A5AA */
  --border:        44 49 56;        /* #2C3138 */
  --accent:        91 140 255;      /* cobalt highlight #5B8CFF */
  --accent-foreground: 15 18 20;    /* dark text on cobalt chips */
}

html { font-size: 14px; }
html[data-density="cozy"] { font-size: 15px; }

.input { height: 32px; border: 1px solid rgb(var(--border)); background: rgb(var(--bg)); border-radius: 0.5rem; padding: 0 0.5rem; }
.panel { background: rgb(var(--surface)); }
`}</style>
  );
}
