{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "go test ./...",
			"type": "shell",
			"command": "go",
			"args": [
				"test",
				"./..."
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "go test ./...",
			"type": "shell",
			"command": "go",
			"args": [
				"test",
				"./..."
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "go test ./...",
			"type": "shell",
			"command": "go",
			"args": [
				"test",
				"./..."
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "go vet + tests",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go vet ./... && go test ./..."
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "build and test after changes",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go vet ./... && go build ./cmd/archon && go test ./..."
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "rerun tests after status tweak",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go test ./internal/snapshot -run TestSnapshotRestore -v"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "full vet/build/test (fresh)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go vet ./... && go build ./cmd/archon && go test ./... -count=1"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "build+test after diff MVP wiring",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go vet ./... && go build ./cmd/archon && go test ./... -count=1"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "staticcheck after changes",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"staticcheck ./..."
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "run only git package tests (fresh)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go test ./internal/git -count=1 -v"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "re-run git package tests",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go test ./internal/git -count=1 -v"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "run git diff tests only",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go test ./internal/git -run TestGetDiff -count=1 -v"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "re-run only diff tests",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go test ./internal/git -run TestGetDiff -count=1 -v"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "run git diff tests with summaries",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go test ./internal/git -run TestGetDiff -count=1 -v"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "build and test after adding diff CLI",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go vet ./... && go build ./cmd/archon && go test ./... -count=1"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		},
		{
			"label": "build and test after docs + flags",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"go vet ./... && go build ./cmd/archon && go test ./... -count=1"
			],
			"problemMatcher": [
				"$go"
			],
			"group": "build"
		}
	]
}